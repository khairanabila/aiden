service_network_ethernet_wrap:
	push rax

	mov qword [rdi + SERVICE_NETWORK_STRUCTURE_FRAME_ETHERNET.target], rax

	mov rax, qword [driver_nic_i82540em_mac_address]
	mov qword [rdi + SERVICE_NETWORK_STRUCTURE_FRAME_ETHERNET.source], rax

	mov word [rdi + SERVICE_NETWORK_STRUCTURE_FRAME_ETHERNET.type], cx

	pop rax

	ret

macro_debug "service_network_ethernet_wrap"

service_network_ip_wrap:
	push rcx
	push rax

	mov byte [rdi + SERVICE_NETWORK_STRUCTURE_FRAME_ETHERNET.SIZE + SERVICE_NETWORK_STRUCTURE_FRAME_IP.version_and_ihl], SERVICE_NETWORK_FRAME_IP_VERSION_4 | SERVICE_NETWORK_FRAME_IP_HEADER_LENGTH_default

	mov byte [rdi + SERVICE_NETWORK_STRUCTURE_FRAME_ETHERNET.SIZE + SERVICE_NETWORK_STRUCTURE_FRAME_IP.dscp_and_ecn], STATIC_EMPTY

	add cx, SERVICE_NETWORK_STRUCTURE_FRAME_IP.SIZE
	rol cx, STATIC_REPLACE_AL_WITH_HIGH_shift
	mov word [rdi + SERVICE_NETWORK_STRUCTURE_FRAME_ETHERNET.SIZE + SERVICE_NETWORK_STRUCTURE_FRAME_IP.total_length], cx

	inc word [rsi + SERVICE_NETWORK_STRUCTURE_TCP_STACK.identification]
	mov ax, word [rsi + SERVICE_NETWORK_STRUCTURE_TCP_STACK.identification]
	mov word [rdi + SERVICE_NETWORK_STRUCTURE_FRAME_ETHERNET.SIZE + SERVICE_NETWORK_STRUCTURE_FRAME_IP.identification], ax

	mov word [rdi + SERVICE_NETWORK_STRUCTURE_FRAME_ETHERNET.SIZE + SERVICE_NETWORK_STRUCTURE_FRAME_IP.f_and_f], SERVICE_NETWORK_FRAME_IP_F_AND_F_do_not_fragment

	mov byte [rdi + SERVICE_NETWORK_STRUCTURE_FRAME_ETHERNET.SIZE + SERVICE_NETWORK_STRUCTURE_FRAME_IP.ttl], SERVICE_NETWORK_FRAME_IP_TTL_default

	mov byte [rdi + SERVICE_NETWORK_STRUCTURE_FRAME_ETHERNET.SIZE + SERVICE_NETWORK_STRUCTURE_FRAME_IP.protocol], bl

	mov word [rdi + SERVICE_NETWORK_STRUCTURE_FRAME_ETHERNET.SIZE + SERVICE_NETWORK_STRUCTURE_FRAME_IP.checksum], STATIC_EMPTY

	mov eax, dword [driver_nic_i82540em_ipv4_address]
	mov dword [rdi + SERVICE_NETWORK_STRUCTURE_FRAME_ETHERNET.SIZE + SERVICE_NETWORK_STRUCTURE_FRAME_IP.source_address], eax

	mov eax, dword [rsi + SERVICE_NETWORK_STRUCTURE_TCP_STACK.source_ipv4]
	mov dword [rdi + SERVICE_NETWORK_STRUCTURE_FRAME_ETHERNET.SIZE + SERVICE_NETWORK_STRUCTURE_FRAME_IP.destination_address], eax

	xor  eax, eax
	mov  ecx, SERVICE_NETWORK_STRUCTURE_FRAME_IP.SIZE >> STATIC_DIVIDE_BY_2_shift
	add  rdi, SERVICE_NETWORK_STRUCTURE_FRAME_ETHERNET.SIZE
	call service_network_checksum
	rol  ax, STATIC_REPLACE_AL_WITH_HIGH_shift
	sub  rdi, SERVICE_NETWORK_STRUCTURE_FRAME_ETHERNET.SIZE
	mov  word [rdi + SERVICE_NETWORK_STRUCTURE_FRAME_ETHERNET.SIZE + SERVICE_NETWORK_STRUCTURE_FRAME_IP.checksum], ax

	pop  rax
	mov  cx, SERVICE_NETWORK_FRAME_ETHERNET_TYPE_ip
	call service_network_ethernet_wrap

	pop rcx

	ret

macro_debug "service_network_ip_wrap"

service_network_tcp_wrap:
	push rax
	push rbx
	push rcx
	push rdi

	mov ax, word [rsi + SERVICE_NETWORK_STRUCTURE_TCP_STACK.host_port]
	mov word [rdi + SERVICE_NETWORK_STRUCTURE_FRAME_ETHERNET.SIZE + SERVICE_NETWORK_STRUCTURE_FRAME_IP.SIZE + SERVICE_NETWORK_STRUCTURE_FRAME_TCP.port_source], ax
	mov ax, word [rsi + SERVICE_NETWORK_STRUCTURE_TCP_STACK.source_port]
	mov word [rdi + SERVICE_NETWORK_STRUCTURE_FRAME_ETHERNET.SIZE + SERVICE_NETWORK_STRUCTURE_FRAME_IP.SIZE + SERVICE_NETWORK_STRUCTURE_FRAME_TCP.port_target], ax

	mov   eax, dword [rsi + SERVICE_NETWORK_STRUCTURE_TCP_STACK.host_sequence]
	bswap eax
	mov   dword [rdi + SERVICE_NETWORK_STRUCTURE_FRAME_ETHERNET.SIZE + SERVICE_NETWORK_STRUCTURE_FRAME_IP.SIZE + SERVICE_NETWORK_STRUCTURE_FRAME_TCP.sequence], eax

	mov   eax, dword [rsi + SERVICE_NETWORK_STRUCTURE_TCP_STACK.source_sequence]
	bswap eax
	mov   dword [rdi + SERVICE_NETWORK_STRUCTURE_FRAME_ETHERNET.SIZE + SERVICE_NETWORK_STRUCTURE_FRAME_IP.SIZE + SERVICE_NETWORK_STRUCTURE_FRAME_TCP.acknowledgement], eax

	mov byte [rdi + SERVICE_NETWORK_STRUCTURE_FRAME_ETHERNET.SIZE + SERVICE_NETWORK_STRUCTURE_FRAME_IP.SIZE + SERVICE_NETWORK_STRUCTURE_FRAME_TCP.header_length], bl

	mov al, byte [rsi + SERVICE_NETWORK_STRUCTURE_TCP_STACK.flags]
	mov byte [rdi + SERVICE_NETWORK_STRUCTURE_FRAME_ETHERNET.SIZE + SERVICE_NETWORK_STRUCTURE_FRAME_IP.SIZE + SERVICE_NETWORK_STRUCTURE_FRAME_TCP.flags], al

	mov ax, word [rsi + SERVICE_NETWORK_STRUCTURE_TCP_STACK.window_size]
	rol ax, STATIC_REPLACE_AL_WITH_HIGH_shift
	mov word [rdi + SERVICE_NETWORK_STRUCTURE_FRAME_ETHERNET.SIZE + SERVICE_NETWORK_STRUCTURE_FRAME_IP.SIZE + SERVICE_NETWORK_STRUCTURE_FRAME_TCP.window_size], ax

	mov dword [rdi + SERVICE_NETWORK_STRUCTURE_FRAME_ETHERNET.SIZE + SERVICE_NETWORK_STRUCTURE_FRAME_IP.SIZE + SERVICE_NETWORK_STRUCTURE_FRAME_TCP.checksum_and_urgent_pointer], STATIC_EMPTY

	call service_network_tcp_pseudo_header

	shr  ecx, STATIC_DIVIDE_BY_2_shift
	add  rdi, SERVICE_NETWORK_STRUCTURE_FRAME_ETHERNET.SIZE + SERVICE_NETWORK_STRUCTURE_FRAME_IP.SIZE
	call service_network_checksum
	rol  ax, STATIC_REPLACE_AL_WITH_HIGH_shift
	mov  word [rdi + SERVICE_NETWORK_STRUCTURE_FRAME_TCP.checksum], ax

	mov  rax, qword [rsi + SERVICE_NETWORK_STRUCTURE_TCP_STACK.source_mac]
	mov  bl, SERVICE_NETWORK_FRAME_IP_PROTOCOL_TCP
	shl  ecx, STATIC_MULTIPLE_BY_2_shift
	sub  rdi, SERVICE_NETWORK_STRUCTURE_FRAME_ETHERNET.SIZE + SERVICE_NETWORK_STRUCTURE_FRAME_IP.SIZE
	call service_network_ip_wrap

	pop rdi
	pop rcx
	pop rbx
	pop rax

	ret

macro_debug "service_network_tcp_wrap"
